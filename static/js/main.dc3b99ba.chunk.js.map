{"version":3,"sources":["assets/lePetitPrince.jpg","assets/pic.jpg","components/FirstPage.js","components/SecondPage.js","components/ThirdPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","FirstPage","handleClick","useStyles","makeStyles","theme","root","display","flexWrap","minWidth","width","image","position","height","breakpoints","down","zIndex","opacity","border","focusVisible","imageButton","left","right","top","bottom","alignItems","justifyContent","color","palette","common","white","imageSrc","backgroundSize","backgroundPosition","imageBackdrop","backgroundColor","black","transition","transitions","create","imageTitle","padding","spacing","fontFamily","imageMarked","ButtonBases","classes","className","ButtonBase","focusRipple","focusVisibleClassName","style","backgroundImage","lePetitPrince","Typography","component","variant","onClick","wrapper","flexDirection","alignSelf","margin","paddingBottom","item","button","SecondPage","Box","Button","ThirdPage","pic","App","useState","page","setPage","renderPage","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.dc3b99ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/lePetitPrince.74d916ac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/pic.b07685da.jpg\";","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport Typography from \"@material-ui/core/Typography\";\nimport lePetitPrince from \"../assets/lePetitPrince.jpg\";\nexport const FirstPage = ({ handleClick }) => {\n  return <ButtonBases handleClick={handleClick} />;\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    minWidth: 300,\n    width: \"100%\",\n  },\n  image: {\n    position: \"relative\",\n    height: 800,\n    [theme.breakpoints.down(\"xs\")]: {\n      width: \"100% !important\", // Overrides inline-style\n      height: 736,\n    },\n    \"&:hover, &$focusVisible\": {\n      zIndex: 1,\n      \"& $imageBackdrop\": {\n        opacity: 0.15,\n      },\n      \"& $imageMarked\": {\n        opacity: 0,\n      },\n      \"& $imageTitle\": {\n        border: \"4px solid currentColor\",\n      },\n    },\n  },\n  focusVisible: {},\n  imageButton: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: -200,\n    bottom: 0,\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    color: theme.palette.common.white,\n  },\n  imageSrc: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center 40%\",\n  },\n  imageBackdrop: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundColor: theme.palette.common.black,\n    opacity: 0.4,\n    transition: theme.transitions.create(\"opacity\"),\n  },\n  imageTitle: {\n    position: \"relative\",\n    padding: `${theme.spacing(2)}px ${theme.spacing(4)}px ${\n      theme.spacing(1) + 6\n    }px`,\n    fontFamily: \"Gill Sans\",\n    color: \"#FAF2A1\",\n  },\n  imageMarked: {\n    height: 3,\n    width: 18,\n    backgroundColor: theme.palette.common.white,\n    position: \"absolute\",\n    bottom: -2,\n    left: \"calc(50% - 9px)\",\n    transition: theme.transitions.create(\"opacity\"),\n  },\n}));\n\nconst ButtonBases = ({ handleClick }) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <ButtonBase\n        focusRipple\n        className={classes.image}\n        focusVisibleClassName={classes.focusVisible}\n        style={{\n          width: \"100%\",\n        }}\n      >\n        <span\n          className={classes.imageSrc}\n          style={{\n            backgroundImage: `url(${lePetitPrince})`,\n          }}\n        />\n        <span className={classes.imageBackdrop} />\n        <span className={classes.imageButton}>\n          <Typography\n            component=\"span\"\n            variant=\"subtitle1\"\n            color=\"inherit\"\n            className={classes.imageTitle}\n            onClick={handleClick}\n          >\n            start\n            <span className={classes.imageMarked} />\n          </Typography>\n        </span>\n      </ButtonBase>\n    </div>\n  );\n};\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport lePetitPrince from \"../assets/lePetitPrince.jpg\";\nimport Button from \"@material-ui/core/Button\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    minWidth: 300,\n    width: \"100%\",\n    alignItems: \"center\",\n    height: 736,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignSelf: \"center\",\n    margin: 10,\n    paddingBottom: 170,\n  },\n  item: {\n    margin: 10,\n    fontFamily: \"Gill Sans\",\n    position: \"relative\",\n    color: \"#FAF2A1\",\n  },\n  imageSrc: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center 40%\",\n  },\n  button: {\n    color: \"#FAF2A1\",\n    fontFamily: \"Gill Sans\",\n  },\n}));\n\nexport const SecondPage = ({ handleClick }) => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.wrapper}>\n        <span\n          className={classes.imageSrc}\n          style={{\n            backgroundImage: `url(${lePetitPrince})`,\n          }}\n        />\n        <span className={classes.item}>\n          - Qu'est-ce qu'un rite? dit le petit prince.\n        </span>\n        <span className={classes.item}>\n          - C'est quelque chose trop oublié, dit le renard. C'est ce qui fait\n          qu'un jour est différent des autres jours, une heure, des autres\n          heures.\n        </span>\n      </Box>\n      <Button className={classes.button} onClick={handleClick}>\n        Go on\n      </Button>\n    </Box>\n  );\n};\n","import React from \"react\";\nimport Box from \"@material-ui/core/Box\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport pic from \"../assets/pic.jpg\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    minWidth: 300,\n    width: \"100%\",\n    alignItems: \"center\",\n    height: 736,\n  },\n  wrapper: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignSelf: \"center\",\n    margin: 10,\n    paddingBottom: 170,\n  },\n  item: {\n    margin: 10,\n    fontFamily: \"Gill Sans\",\n    position: \"relative\",\n    color: \"#FAF2A1\",\n  },\n  imageSrc: {\n    position: \"absolute\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    backgroundSize: \"cover\",\n    backgroundPosition: \"center 40%\",\n  },\n}));\n\nexport const ThirdPage = () => {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.root}>\n      <Box className={classes.wrapper}>\n        <span\n          className={classes.imageSrc}\n          style={{\n            backgroundImage: `url(${pic})`,\n          }}\n        />\n      </Box>\n    </Box>\n  );\n};\n","import React, { useState, Fragment } from \"react\";\nimport \"./App.css\";\nimport { FirstPage, SecondPage, ThirdPage } from \"./components\";\n\nfunction App() {\n  const [page, setPage] = useState(0);\n  const handleClick = () => {\n    const currentPage = page + 1;\n    setPage(currentPage);\n  };\n  const renderPage = () => {\n    switch (page) {\n      case 0:\n        return <FirstPage handleClick={handleClick} />;\n      case 1:\n        return <SecondPage handleClick={handleClick} />;\n      case 2:\n        return <ThirdPage />;\n      default:\n        break;\n    }\n  };\n  return <Fragment> {renderPage()}</Fragment>;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}